{"version":3,"sources":["../../src/pages/iniciativa-info/iniciativa-info.module.ts","../../src/pages/iniciativa-info/iniciativa-info.ts","../../node_modules/@ionic-native/google-maps/index.js"],"names":[],"mappings":"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CA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,yBAAyB;AACzB,gBAAgB;AAChB;AACA,+DAA+D,QAAQ;AACvE;AACA;AACA,sBAAsB;AACtB;AACA,0DAA0D,QAAQ;AAClE;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,kBAAkB;AAClB,cAAc;AACd;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,uBAAuB,IAAI;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iEAAiE,QAAQ;AACzE;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gEAAgE,QAAQ;AACxE;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,mBAAmB;AACnB,sBAAsB;AACtB,0BAA0B;AAC1B,yBAAyB;AACzB;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yFAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yFAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA,0DAA0D;AAC1D;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB;AACA,gEAAgE;AAChE;AACA;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB,gBAAgB,cAAc;AAC9B;AACA,4DAA4D,QAAQ;AACpE;AACA;AACA,kBAAkB;AAClB,yBAAyB;AACzB,gBAAgB,cAAc;AAC9B;AACA,+DAA+D,QAAQ;AACvE;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,qBAAqB;AACrB,gBAAgB;AAChB;AACA,uDAAuD;AACvD;AACA;AACA,gBAAgB;AAChB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,uBAAuB;AACvB,gBAAgB;AAChB;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,qBAAqB;AACrB,uBAAuB;AACvB,yBAAyB,QAAQ;AACjC,gBAAgB;AAChB;AACA,6EAA6E;AAC7E;AACA;AACA,yBAAyB,QAAQ;AACjC,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,uBAAuB;AACvB,yBAAyB,QAAQ;AACjC;AACA,kEAAkE;AAClE;AACA;AACA,qBAAqB;AACrB,yBAAyB,QAAQ;AACjC;AACA,oEAAoE;AACpE;AACA;AACA,qBAAqB;AACrB,uBAAuB;AACvB,yBAAyB,QAAQ;AACjC;AACA,0EAA0E;AAC1E;AACA,CAAC;AACD;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,2CAA2C,kBAAkB;AAC7D;AACA;AACA,sBAAsB;AACtB;AACA,oDAAoD;AACpD;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,sBAAsB;AACtB;AACA,oDAAoD;AACpD;AACA;AACA,qBAAqB;AACrB;AACA,sDAAsD;AACtD;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,2BAA2B;AAC3B;AACA,8DAA8D;AAC9D;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,2BAA2B;AAC3B;AACA,8DAA8D;AAC9D;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,yBAAyB;AACzB;AACA,0DAA0D;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,sBAAsB;AACtB;AACA,oDAAoD;AACpD;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,uBAAuB;AACvB;AACA,sDAAsD;AACtD;AACA;AACA,gBAAgB;AAChB;AACA,+CAA+C,QAAQ;AACvD;AACA,CAAC;AACO;AACR;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,0BAA0B,OAAO;AACjC,gBAAgB;AAChB;AACA,mEAAmE,QAAQ;AAC3E;AACA;AACA,oBAAoB,yCAAyC;AAC7D,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA,CAAC;AACD;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB,gBAAgB;AAChB;AACA,sEAAsE,QAAQ;AAC9E;AACA;AACA,oBAAoB;AACpB,wBAAwB;AACxB,uBAAuB;AACvB,gBAAgB;AAChB;AACA,4EAA4E,QAAQ;AACpF;AACA;AACA,kBAAkB,QAAQ;AAC1B,wBAAwB,OAAO;AAC/B,uBAAuB,OAAO;AAC9B,gBAAgB;AAChB;AACA,gFAAgF,QAAQ;AACxF;AACA;AACA,oBAAoB;AACpB,gBAAgB;AAChB;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA,oBAAoB,yCAAyC;AAC7D,gBAAgB;AAChB;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA,oBAAoB,yCAAyC;AAC7D,gBAAgB;AAChB;AACA,6DAA6D,QAAQ;AACrE;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB,gBAAgB;AAChB;AACA,8DAA8D,QAAQ;AACtE;AACA;AACA,oBAAoB,QAAQ;AAC5B,kBAAkB,QAAQ;AAC1B,wBAAwB,OAAO;AAC/B,gBAAgB;AAChB;AACA,qEAAqE,QAAQ;AAC7E;AACA,CAAC;AACD;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,iFAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,yBAAyB;AACzB;AACA,6DAA6D;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA,mEAAmE,QAAQ;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA,gBAAgB;AAChB;AACA,4DAA4D,QAAQ;AACpE;AACA;AACA,gBAAgB;AAChB;AACA,gEAAgE,QAAQ;AACxE;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA,gBAAgB;AAChB;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA,gBAAgB;AAChB;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,sBAAsB;AACtB;AACA,6DAA6D;AAC7D;AACA;AACA,yBAAyB,OAAO;AAChC;AACA,8DAA8D;AAC9D;AACA;AACA,yBAAyB,OAAO;AAChC;AACA,8DAA8D;AAC9D;AACA;AACA,uBAAuB;AACvB;AACA,+DAA+D;AAC/D;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB;AACA,iDAAiD;AACjD;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,4DAA4D,QAAQ;AACpE;AACA;AACA,2BAA2B;AAC3B;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,gBAAgB;AAChB;AACA,+DAA+D,QAAQ;AACvE;AACA;AACA,gBAAgB;AAChB;AACA,8DAA8D,QAAQ;AACtE;AACA;AACA,uBAAuB;AACvB;AACA,mEAAmE;AACnE;AACA;AACA,gBAAgB;AAChB;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,uBAAuB;AACvB;AACA,+DAA+D;AAC/D;AACA;AACA,uBAAuB;AACvB;AACA,gEAAgE;AAChE;AACA;AACA,uBAAuB;AACvB;AACA,gEAAgE;AAChE;AACA;AACA,uBAAuB;AACvB;AACA,oEAAoE;AACpE;AACA;AACA,uBAAuB;AACvB;AACA,yDAAyD;AACzD;AACA;AACA,mBAAmB;AACnB,qBAAqB;AACrB,oBAAoB;AACpB,sBAAsB;AACtB;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA,CAAC;AACD;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA,sBAAsB;AACtB;AACA,2DAA2D;AAC3D;AACA;AACA,uBAAuB;AACvB;AACA,6DAA6D;AAC7D;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA,yDAAyD;AACzD;AACA;AACA;AACA,uBAAuB;AACvB;AACA,6DAA6D;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,yBAAyB;AACzB;AACA,iEAAiE;AACjE;AACA;AACA,gBAAgB;AAChB;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA,uBAAuB;AACvB;AACA,6DAA6D;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,qBAAqB;AACrB;AACA,0DAA0D;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA,kDAAkD;AAClD;AACA,CAAC;AACO;AACR;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,oEAAoE;AACpE;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA,8DAA8D;AAC9D;AACA;AACA,sBAAsB;AACtB;AACA,uDAAuD;AACvD;AACA;AACA;AACA,kDAAkD;AAClD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA,gBAAgB;AAChB;AACA,2CAA2C,kBAAkB;AAC7D;AACA;AACA,sBAAsB;AACtB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,yBAAyB;AACzB;AACA,0DAA0D;AAC1D;AACA;AACA,8BAA8B;AAC9B;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,qBAAqB;AACrB;AACA,kDAAkD;AAClD;AACA;AACA,gBAAgB;AAChB;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,uBAAuB;AACvB;AACA,sDAAsD;AACtD;AACA;AACA,gBAAgB;AAChB;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA,oDAAoD;AACpD;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,sDAAsD;AACtD;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,4DAA4D;AAC5D;AACA;AACA,gBAAgB;AAChB;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,oDAAoD;AACpD;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,yBAAyB;AACzB;AACA,0DAA0D;AAC1D;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,oBAAoB;AACpB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,wBAAwB;AACxB;AACA,wDAAwD;AACxD;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA,CAAC;AACO;AACR;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,6DAA6D;AAC7D,kDAAkD;AAClD;AACA,CAAC;AACO;AACR;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA,sBAAsB;AACtB;AACA,qDAAqD;AACrD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA,qBAAqB;AACrB;AACA,mDAAmD;AACnD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA,yBAAyB;AACzB;AACA,2DAA2D;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA,2BAA2B;AAC3B;AACA,+DAA+D;AAC/D;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,yBAAyB;AACzB;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA,uBAAuB;AACvB;AACA,uDAAuD;AACvD;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,sBAAsB;AACtB;AACA,qDAAqD;AACrD;AACA;AACA,gBAAgB;AAChB;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,wBAAwB;AACxB;AACA,yDAAyD;AACzD;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA,CAAC;AACO;AACR;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,6CAA6C,kBAAkB;AAC/D;AACA;AACA,sBAAsB;AACtB;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,wBAAwB;AACxB;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA,uBAAuB;AACvB;AACA,wDAAwD;AACxD;AACA;AACA,gBAAgB;AAChB;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,yBAAyB;AACzB;AACA,4DAA4D;AAC5D;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,2BAA2B;AAC3B;AACA,gEAAgE;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,2BAA2B;AAC3B;AACA,gEAAgE;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA,qBAAqB;AACrB;AACA,qDAAqD;AACrD;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,CAAC;AACO;AACR;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA,sBAAsB;AACtB;AACA,yDAAyD;AACzD;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,sBAAsB;AACtB;AACA,yDAAyD;AACzD;AACA;AACA,gBAAgB;AAChB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,uBAAuB;AACvB;AACA,2DAA2D;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA,uBAAuB;AACvB;AACA,2DAA2D;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA,gDAAgD;AAChD;AACA,CAAC;AACO;AACR;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,yFAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,iC","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { IniciativaInfoPage } from './iniciativa-info';\n\n@NgModule({\n  declarations: [\n    IniciativaInfoPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(IniciativaInfoPage),\n  ],\n})\nexport class IniciativaInfoPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/iniciativa-info/iniciativa-info.module.ts","import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { ServicesProvider } from '../../providers/services/services';\r\nimport { LatLng } from '@ionic-native/google-maps';\r\nimport { AlertController } from 'ionic-angular';\r\nimport { Http } from '@angular/http';\r\nimport { ToastController } from 'ionic-angular';\r\nimport { ModalController } from 'ionic-angular';\r\n\r\n/**\r\n * Generated class for the IniciativaInfoPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\ndeclare var google;\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-iniciativa-info',\r\n  templateUrl: 'iniciativa-info.html',\r\n})\r\nexport class IniciativaInfoPage {\r\n\r\n  @ViewChild('map') mapElement: ElementRef;\r\n  map: any;\r\n  comentarios: any;\r\n  comentario: string = \"\";\r\n  likes: string;\r\n  comentariosTotal: string;\r\n  dispositivo: boolean;\r\n  titulo: string;\r\n  descripcion: string;\r\n  idInicitiva: any;\r\n  imagen: string;\r\n  fecha: string;\r\n  area: any;\r\n  puntos: any;\r\n  iniciativa: any;\r\n  esUsuario: boolean;\r\n  marcadoresUsuario: any;\r\n  nombreUsuario: string;\r\n  comentarioVacio: boolean = true;\r\n  archivo: string = \"\";\r\n  correo: string;\r\n  telefono: string;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, public http: Http,\r\n    private services: ServicesProvider, public alertCtrl: AlertController,\r\n    public toastCtrl: ToastController, private modal: ModalController) {\r\n    this.dispositivo = this.services.getPlataforma() == \"web\" ? false : true;\r\n    var usuario = this.services.getCookie(\"usuario\");\r\n    if (usuario == \"\" || usuario == \"0\") {\r\n      this.esUsuario = false;\r\n      this.nombreUsuario = 'Iniciar Sesión';\r\n    } else {\r\n      this.nombreUsuario = this.services.getCookie(\"nombre\");\r\n      this.esUsuario = true;\r\n    }\r\n    this.correo = this.services.getCookie(\"email\");\r\n    this.telefono = this.services.getCookie(\"telefono\");\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.initMap();\r\n    if (this.navParams.data.valor === 1) {\r\n      this.cargarIniciativaUsuario();\r\n    } else {\r\n      var index = this.services.getCookie(\"iniciativa\");\r\n      var urlIniciativa = this.services.obtenerURLGlobal() + 'Iniciativa/GetIniciativa/' + index;\r\n      this.getIniciativa(urlIniciativa);\r\n    }\r\n  }\r\n\r\n  hayFecha(fecha) {\r\n    return fecha != null;\r\n  }\r\n\r\n  esImagen(archivo) {\r\n    if (archivo.length > 0) {\r\n      var arreglo = archivo.substring(archivo.length - 3);\r\n      if (arreglo === \"jpg\" || arreglo === \"png\" || arreglo === \"svg\" || arreglo === \"bmp\" || arreglo === \"gif\" || arreglo === \"jpe\" || arreglo === \"tif\") {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  esCometarioVacio() {\r\n    return this.comentario == \"\";\r\n  }\r\n\r\n  cargarIniciativaUsuario() {\r\n    this.titulo = this.navParams.data.iniciativa.titulo;\r\n    this.descripcion = this.navParams.data.iniciativa.descripcion;\r\n    this.idInicitiva = this.navParams.data.iniciativa.idIniciativa;\r\n    this.imagen = this.navParams.data.iniciativa.imagen;\r\n    this.comentarios = this.navParams.data.iniciativa.Comentarios;\r\n    this.fecha = this.navParams.data.iniciativa.fecha;\r\n    this.area = this.navParams.data.iniciativa.area;\r\n    this.comentariosTotal = this.comentarios.length;\r\n    this.likes = this.navParams.data.iniciativa.likes;\r\n    this.puntos = this.navParams.data.iniciativa.puntos;\r\n    this.archivo = this.navParams.data.iniciativa.archivo;\r\n    this.cargarIniciativasDeComentariosMapa();\r\n    this.marcadoresUsuario = [];\r\n  }\r\n\r\n  cargarIniciativa() {\r\n    this.titulo = this.iniciativa.titulo;\r\n    this.descripcion = this.iniciativa.descripcion;\r\n    this.idInicitiva = this.iniciativa.idIniciativa;\r\n    this.imagen = this.iniciativa.imagen;\r\n    this.comentarios = this.iniciativa.Comentarios;\r\n    this.fecha = this.iniciativa.fecha;\r\n    this.area = this.iniciativa.area;\r\n    this.comentariosTotal = this.comentarios.length;\r\n    this.likes = this.iniciativa.likes;\r\n    this.puntos = this.iniciativa.puntos;\r\n    this.archivo = this.iniciativa.archivo;\r\n    this.marcadoresUsuario = [];\r\n  }\r\n\r\n  getIniciativa(urlIniciativa) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(urlIniciativa).subscribe(data => {\r\n        this.iniciativa = data.json();\r\n        this.iniciativa = this.iniciativa.Iniciativa;\r\n        this.cargarIniciativa();\r\n        this.cargarIniciativaEnElMapa();\r\n        this.cargarIniciativasDeComentariosMapa();\r\n      });\r\n    })\r\n  }\r\n\r\n  initMap() {\r\n    let latLng = new google.maps.LatLng(-17.393835, -66.156946);\r\n    let mapOptions = {\r\n      center: latLng,\r\n      zoom: 12,\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    };\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\r\n    google.maps.event.addListener(this.map, 'click', e => {\r\n      this.clickMapa(e);\r\n      this.concatenarMarcadores();\r\n    });\r\n  }\r\n\r\n  clickMapa(punto) {\r\n    if (this.esUsuario) {\r\n      var marker = new google.maps.Marker({\r\n        position: punto.latLng,\r\n        map: this.map\r\n      });\r\n      this.map.panTo(punto.latLng);\r\n      this.marcadoresUsuario.push(marker);\r\n      marker.addListener('click', () => {\r\n        this.mensajeEliminaMarcador(marker);\r\n      });\r\n    }\r\n  }\r\n\r\n  addInfoWindowToMarker(object) {\r\n    console.log(object);\r\n    var infoWindowContent = '<div id=\"content\"><p><b>' + object.Comment.Usuario + '</b></p><p>' + object.Comment.descripcion + '</p></div>';\r\n    var infoWindow = new google.maps.InfoWindow({\r\n      content: infoWindowContent\r\n    });\r\n    object.Marker.addListener('click', () => {\r\n      infoWindow.open(this.map, object.Marker);\r\n    });\r\n  }\r\n\r\n  mensajeEliminaMarcador(marcador) {\r\n    let prompt = this.alertCtrl.create({\r\n      title: 'Eliminar Punto',\r\n      message: \"Desea eliminar este punto del mapa?\",\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        },\r\n        {\r\n          text: 'Eliminar',\r\n          handler: data => {\r\n            marcador.setMap(null);\r\n            this.removerMarcadorDeUsuario(marcador);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    prompt.present();\r\n  }\r\n\r\n  removerMarcadorDeUsuario(marcador) {\r\n    var index = this.marcadoresUsuario.indexOf(marcador);\r\n    this.marcadoresUsuario.splice(index, 1);\r\n  }\r\n\r\n  removerTodosLosMarcadores() {\r\n    for (let i = 0; i < this.marcadoresUsuario.length; i++) {\r\n      this.marcadoresUsuario[i].setMap(null);\r\n    }\r\n  }\r\n\r\n  subirComentario() {\r\n    if (this.comentario != \"\") {\r\n      var puntos = this.concatenarMarcadores();\r\n      this.services.subirComentario({ idIniciativa: this.idInicitiva, comentario: this.comentario, puntos: puntos });\r\n      this.removerTodosLosMarcadores();\r\n      this.marcadoresUsuario = [];\r\n      //this.mensajeEnviado();\r\n      this.comentarios.push({ Usuario: this.services.getCookie(\"nombre\"), fecha: Date.now(), descripcion: this.comentario, estado: \"Atencion\", archivo: \"\" });\r\n    }\r\n    this.comentario = \"\";\r\n  }\r\n\r\n  concatenarMarcadores() {\r\n    var cadena = \"\";\r\n    if (this.marcadoresUsuario.length > 0) {\r\n      cadena = \"{ lat:\" + this.marcadoresUsuario[0].position.lat() + \", lng:\" + this.marcadoresUsuario[0].position.lng() + \"}\";\r\n    }\r\n    for (let i = 1; i < this.marcadoresUsuario.length; i++) {\r\n      cadena += \",\";\r\n      cadena += \"{ lat:\" + this.marcadoresUsuario[i].position.lat() + \", lng:\" + this.marcadoresUsuario[i].position.lng() + \"}\";\r\n    }\r\n    return cadena;\r\n  }\r\n\r\n  openModal() {\r\n    if (this.comentario != \"\") {\r\n      const myModal = this.modal.create('ModalPage');\r\n      myModal.present();\r\n    }\r\n  }\r\n\r\n  darLike() {\r\n    this.services.subirLike(this.idInicitiva);\r\n  }\r\n\r\n  cargarIniciativasDeComentariosMapa() {\r\n    for (let i = 0; i < this.comentarios.length; i++) {\r\n      if (this.comentarios[i].area == 0) {\r\n        this.graficarPuntosiniciativaEnMapa(this.comentarios[i].Puntos);\r\n      } else {\r\n        this.graficarAreainiciativaEnMapa(this.comentarios[i].Puntos);\r\n      }\r\n    }\r\n  }\r\n\r\n  cargarIniciativaEnElMapa() {\r\n    if (this.area == 0) {\r\n      this.graficarPuntosiniciativaEnMapa(this.puntos);\r\n    } else {\r\n      this.graficarAreainiciativaEnMapa(this.puntos);\r\n    }\r\n  }\r\n\r\n  graficarPuntosiniciativaEnMapa(marcadores) {\r\n    var c = 0;\r\n    for (let i = 0; i < marcadores.length; i++) {\r\n      let marcador: LatLng = new LatLng(marcadores[i].lat, marcadores[i].lng);\r\n      var marker = new google.maps.Marker({\r\n        position: marcador,\r\n        map: this.map\r\n      });\r\n      marker.setMap(this.map);\r\n      if (this.comentarios.length > c) {\r\n        var object = { Marker: marker, Comment: this.comentarios[c] }\r\n        this.addInfoWindowToMarker(object);\r\n        c = c + 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  graficarAreainiciativaEnMapa(puntos) {\r\n    var covertura = new google.maps.Polygon({\r\n      path: puntos,\r\n      geodesic: true,\r\n      strokeColor: \"#FF0000\",\r\n      strokeOpacity: 0.8,\r\n      strokeWeight: 2,\r\n      fillColor: \"#FF0000\",\r\n      fillOpacity: 0.35\r\n    });\r\n    covertura.setMap(this.map);\r\n  }\r\n\r\n  mensajeEnviado() {\r\n    let toast = this.toastCtrl.create({\r\n      message: 'Gracias por contribuir a esta iniciativa, tu reporte sera procesado.',\r\n      duration: 5000,\r\n      position: 'middle'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  opcionesLogin() {\r\n    if (this.nombreUsuario == 'Iniciar Sesión') {\r\n      let profileModal = this.modal.create('LoginPage');\r\n      profileModal.present();\r\n    } else {\r\n      if (this.telefono == 'undefine') {\r\n        this.telefono = \"N/A\";\r\n      }\r\n      let alert = this.alertCtrl.create({\r\n        title: 'Datos Usuario',\r\n        subTitle: 'Nombre: ' + this.nombreUsuario + '<br>Correo: ' + this.correo + '<br>Teléfono: ' + this.telefono,\r\n        buttons: [\r\n          {\r\n            text: 'Modificar',\r\n            handler: () => {\r\n              let perfilModal = this.modal.create('PerfilPage');\r\n              perfilModal.present();\r\n            }\r\n          },\r\n          {\r\n            text: 'Cerrar Sesión',\r\n            handler: () => {\r\n              this.nombreUsuario = 'Iniciar Sesión';\r\n              document.cookie = \"usuario\" + \"=\" + 0;\r\n              document.cookie = \"nombre\" + \"=\" + '';\r\n              document.cookie = \"telefono\" + \"=\" + '';\r\n              document.cookie = \"email\" + \"=\" + '';\r\n              document.cookie = \"iniciativa\" + \"=\" + '';\r\n              this.navCtrl.push('IniciativasPage');\r\n            }\r\n          }]\r\n      });\r\n      alert.present();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/iniciativa-info/iniciativa-info.ts","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Cordova, CordovaInstance, Plugin, InstanceProperty, InstanceCheck, checkAvailability, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/fromEvent';\r\n/**\r\n * @hidden\r\n */\r\nvar LatLng = (function () {\r\n    function LatLng(lat, lng) {\r\n        this.lat = lat;\r\n        this.lng = lng;\r\n    }\r\n    LatLng.prototype.equals = function (other) {\r\n        return this.lat === other.lat && this.lng === other.lng;\r\n    };\r\n    LatLng.prototype.toString = function () {\r\n        return this.lat + ',' + this.lng;\r\n    };\r\n    LatLng.prototype.toUrlValue = function (precision) {\r\n        precision = precision || 6;\r\n        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\r\n    };\r\n    return LatLng;\r\n}());\r\nexport { LatLng };\r\n/**\r\n * @hidden\r\n */\r\nvar LatLngBounds = (function () {\r\n    function LatLngBounds(points) {\r\n        this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(points);\r\n    }\r\n    /**\r\n     * Converts to string\r\n     * @return {string}\r\n     */\r\n    LatLngBounds.prototype.toString = function () { return; };\r\n    /**\r\n     * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\r\n     * @param precision {number}\r\n     * @return {string}\r\n     */\r\n    LatLngBounds.prototype.toUrlValue = function (precision) { return; };\r\n    /**\r\n     * Extends this bounds to contain the given point.\r\n     * @param LatLng {ILatLng}\r\n     */\r\n    LatLngBounds.prototype.extend = function (LatLng) { };\r\n    /**\r\n     * Returns true if the given lat/lng is in this bounds.\r\n     * @param LatLng {ILatLng}\r\n     */\r\n    LatLngBounds.prototype.contains = function (LatLng) { return; };\r\n    /**\r\n     * Computes the center of this LatLngBounds\r\n     * @return {LatLng}\r\n     */\r\n    LatLngBounds.prototype.getCenter = function () { return; };\r\n    return LatLngBounds;\r\n}());\r\nexport { LatLngBounds };\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", Object)\r\n], LatLngBounds.prototype, \"northeast\", void 0);\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", Object)\r\n], LatLngBounds.prototype, \"southwest\", void 0);\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", String)\r\n], LatLngBounds.prototype, \"type\", void 0);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], LatLngBounds.prototype, \"toString\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", String)\r\n], LatLngBounds.prototype, \"toUrlValue\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], LatLngBounds.prototype, \"extend\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], LatLngBounds.prototype, \"contains\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", LatLng)\r\n], LatLngBounds.prototype, \"getCenter\", null);\r\n/**\r\n * @hidden\r\n */\r\nvar VisibleRegion = (function () {\r\n    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {\r\n        this._objectInstance = new (GoogleMaps.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);\r\n    }\r\n    /**\r\n     * Converts to string\r\n     * @return {string}\r\n     */\r\n    VisibleRegion.prototype.toString = function () { return; };\r\n    /**\r\n     * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\r\n     * @param precision {number}\r\n     * @return {string}\r\n     */\r\n    VisibleRegion.prototype.toUrlValue = function (precision) { return; };\r\n    /**\r\n     * Returns true if the given lat/lng is in this bounds.\r\n     * @param LatLng {ILatLng}\r\n     */\r\n    VisibleRegion.prototype.contains = function (LatLng) { return; };\r\n    return VisibleRegion;\r\n}());\r\nexport { VisibleRegion };\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", Object)\r\n], VisibleRegion.prototype, \"northeast\", void 0);\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", Object)\r\n], VisibleRegion.prototype, \"southwest\", void 0);\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", Object)\r\n], VisibleRegion.prototype, \"farLeft\", void 0);\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", Object)\r\n], VisibleRegion.prototype, \"farRight\", void 0);\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", Object)\r\n], VisibleRegion.prototype, \"nearLeft\", void 0);\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", Object)\r\n], VisibleRegion.prototype, \"nearRight\", void 0);\r\n__decorate([\r\n    InstanceProperty,\r\n    __metadata(\"design:type\", String)\r\n], VisibleRegion.prototype, \"type\", void 0);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], VisibleRegion.prototype, \"toString\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", String)\r\n], VisibleRegion.prototype, \"toUrlValue\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], VisibleRegion.prototype, \"contains\", null);\r\n/**\r\n * @hidden\r\n * You can listen to these events where appropriate\r\n */\r\nexport var GoogleMapsEvent = {\r\n    MAP_READY: 'map_ready',\r\n    MAP_LOADED: 'map_loaded',\r\n    MAP_CLICK: 'map_click',\r\n    MAP_LONG_CLICK: 'map_long_click',\r\n    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\r\n    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\r\n    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\r\n    CAMERA_MOVE_START: 'camera_move_start',\r\n    CAMERA_MOVE: 'camera_move',\r\n    CAMERA_MOVE_END: 'camera_move_end',\r\n    OVERLAY_CLICK: 'overlay_click',\r\n    POLYGON_CLICK: 'polygon_click',\r\n    POLYLINE_CLICK: 'polyline_click',\r\n    CIRCLE_CLICK: 'circle_click',\r\n    GROUND_OVERLAY_CLICK: 'groundoverlay_click',\r\n    INFO_CLICK: 'info_click',\r\n    INFO_LONG_CLICK: 'info_long_click',\r\n    INFO_CLOSE: 'info_close',\r\n    INFO_OPEN: 'info_open',\r\n    CLUSTER_CLICK: 'cluster_click',\r\n    MARKER_CLICK: 'marker_click',\r\n    MARKER_DRAG: 'marker_drag',\r\n    MARKER_DRAG_START: 'marker_drag_start',\r\n    MARKER_DRAG_END: 'marker_drag_end',\r\n    MAP_DRAG: 'map_drag',\r\n    MAP_DRAG_START: 'map_drag_start',\r\n    MAP_DRAG_END: 'map_drag_end'\r\n};\r\n/**\r\n * @hidden\r\n */\r\nexport var GoogleMapsAnimation = {\r\n    BOUNCE: 'BOUNCE',\r\n    DROP: 'DROP'\r\n};\r\n/**\r\n * @hidden\r\n */\r\nexport var GoogleMapsMapTypeId = {\r\n    NORMAL: 'MAP_TYPE_NORMAL',\r\n    ROADMAP: 'MAP_TYPE_ROADMAP',\r\n    SATELLITE: 'MAP_TYPE_SATELLITE',\r\n    HYBRID: 'MAP_TYPE_HYBRID',\r\n    TERRAIN: 'MAP_TYPE_TERRAIN',\r\n    NONE: 'MAP_TYPE_NONE'\r\n};\r\n/**\r\n * @name Google Maps\r\n * @description\r\n * This plugin uses the native Google Maps SDK\r\n * Note: As of Ionic native 4.0, this using the 2.0 version of the google maps plugin. Please make sure your plugin is updated\r\n * @usage\r\n * ```typescript\r\n * import {\r\n *  GoogleMaps,\r\n *  GoogleMap,\r\n *  GoogleMapsEvent,\r\n *  GoogleMapOptions,\r\n *  CameraPosition,\r\n *  MarkerOptions,\r\n *  Marker\r\n * } from '@ionic-native/google-maps';\r\n * import { Component } from \"@angular/core/\";\r\n *\r\n * @Component({\r\n *   selector: 'page-home',\r\n *   templateUrl: 'home.html'\r\n * })\r\n * export class HomePage {\r\n *   map: GoogleMap;\r\n *   mapElement: HTMLElement;\r\n *   constructor(private googleMaps: GoogleMaps) { }\r\n *\r\n *   ionViewDidLoad() {\r\n *    this.loadMap();\r\n *   }\r\n *\r\n *  loadMap() {\r\n *     this.mapElement = document.getElementById('map');\r\n *\r\n *     let mapOptions: GoogleMapOptions = {\r\n *       camera: {\r\n *         target: {\r\n *           lat: 43.0741904,\r\n *           lng: -89.3809802\r\n *         },\r\n *         zoom: 18,\r\n *         tilt: 30\r\n *       }\r\n *     };\r\n *\r\n *     this.map = this.googleMaps.create(this.mapElement, mapOptions);\r\n *\r\n *     // Wait the MAP_READY before using any methods.\r\n *     this.map.one(GoogleMapsEvent.MAP_READY)\r\n *       .then(() => {\r\n *         console.log('Map is ready!');\r\n *\r\n *         // Now you can use all methods safely.\r\n *         this.map.addMarker({\r\n *             title: 'Ionic',\r\n *             icon: 'blue',\r\n *             animation: 'DROP',\r\n *             position: {\r\n *               lat: 43.0741904,\r\n *               lng: -89.3809802\r\n *             }\r\n *           })\r\n *           .then(marker => {\r\n *             marker.on(GoogleMapsEvent.MARKER_CLICK)\r\n *               .subscribe(() => {\r\n *                 alert('clicked');\r\n *               });\r\n *           });\r\n *\r\n *       });\r\n *   }\r\n * }\r\n *\r\n * ```\r\n * @classes\r\n * GoogleMap\r\n * Circle\r\n * Encoding\r\n * Environment\r\n * Geocoder\r\n * GroundOverlay\r\n * HtmlInfoWindow\r\n * Geocoder\r\n * LatLng\r\n * LatLngBounds\r\n * Marker\r\n * MarkerCluster\r\n * Polygon\r\n * Polyline\r\n * Spherical\r\n * TileOverlay\r\n * BaseClass\r\n * BaseArrayClass\r\n * @interfaces\r\n * GoogleMapOptions\r\n * CameraPosition\r\n * CircleOptions\r\n * GeocoderRequest\r\n * GeocoderResult\r\n * GroundOverlayOptions\r\n * ILatLng\r\n * MarkerIcon\r\n * MarkerOptions\r\n * MarkerClusterIcon\r\n * MarkerClusterOptions\r\n * MyLocation\r\n * MyLocationOptions\r\n * PolygonOptions\r\n * PolylineOptions\r\n * TileOverlayOptions\r\n * VisibleRegion\r\n */\r\nvar GoogleMaps = (function (_super) {\r\n    __extends(GoogleMaps, _super);\r\n    function GoogleMaps() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Keep a single instance of Environment in memory\r\n         * @hidden\r\n         */\r\n        _this._environment = new Environment();\r\n        /**\r\n         * @hidden\r\n         */\r\n        _this._spherical = new Spherical();\r\n        /**\r\n         * @hidden\r\n         */\r\n        _this._encoding = new Encoding();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new GoogleMap instance\r\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\r\n     * @param options {any} Options\r\n     * @return {GoogleMap}\r\n     */\r\n    GoogleMaps.prototype.create = function (element, options) {\r\n        return new GoogleMap(element, options);\r\n    };\r\n    /**\r\n     * Method that returns an instance of Environment class\r\n     * @return {Environment}\r\n     */\r\n    GoogleMaps.prototype.environment = function () {\r\n        return this._environment;\r\n    };\r\n    /**\r\n     * Method that returns an instance of Spherical class\r\n     * @returns {Spherical}\r\n     */\r\n    GoogleMaps.prototype.spherical = function () {\r\n        return this._spherical;\r\n    };\r\n    /**\r\n     * Method that returns an instance of Encoding class\r\n     * @returns {Encoding}\r\n     */\r\n    GoogleMaps.prototype.encoding = function () {\r\n        return this._encoding;\r\n    };\r\n    return GoogleMaps;\r\n}(IonicNativePlugin));\r\nGoogleMaps.decorators = [\r\n    { type: Injectable },\r\n];\r\n/** @nocollapse */\r\nGoogleMaps.ctorParameters = function () { return []; };\r\nGoogleMaps = __decorate([\r\n    Plugin({\r\n        pluginName: 'GoogleMaps',\r\n        pluginRef: 'plugin.google.maps',\r\n        plugin: 'cordova-plugin-googlemaps',\r\n        repo: 'https://github.com/mapsplugin/cordova-plugin-googlemaps#multiple_maps',\r\n        install: 'ionic cordova plugin add https://github.com/mapsplugin/cordova-plugin-googlemaps#multiple_maps --variable API_KEY_FOR_ANDROID=\"YOUR_ANDROID_API_KEY_IS_HERE\" --variable API_KEY_FOR_IOS=\"YOUR_IOS_API_KEY_IS_HERE\"',\r\n        installVariables: ['API_KEY_FOR_ANDROID', 'API_KEY_FOR_IOS'],\r\n        platforms: ['Android', 'iOS']\r\n    })\r\n], GoogleMaps);\r\nexport { GoogleMaps };\r\n/**\r\n * @hidden\r\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseClass/README.md\r\n */\r\nvar BaseClass = (function () {\r\n    function BaseClass() {\r\n    }\r\n    /**\r\n     * Adds an event listener.\r\n     *\r\n     * @return {Observable<any>}\r\n     */\r\n    BaseClass.prototype.addEventListener = function (eventName) { return; };\r\n    /**\r\n     * Adds an event listener that works once.\r\n     *\r\n     * @return {Promise<any>}\r\n     */\r\n    BaseClass.prototype.addListenerOnce = function (eventName) { return; };\r\n    /**\r\n     * Gets a value\r\n     * @param key\r\n     */\r\n    BaseClass.prototype.get = function (key) { return; };\r\n    /**\r\n     * Sets a value\r\n     * @param key\r\n     * @param value\r\n     */\r\n    BaseClass.prototype.set = function (key, value, noNotify) { };\r\n    /**\r\n     * Bind a key to another object\r\n     * @param key {string}\r\n     * @param target {any}\r\n     * @param targetKey? {string}\r\n     * @param noNotify? {boolean}\r\n     */\r\n    BaseClass.prototype.bindTo = function (key, target, targetKey, noNotify) { };\r\n    /**\r\n     * Listen to a map event.\r\n     *\r\n     * @return {Observable<any>}\r\n     */\r\n    BaseClass.prototype.on = function (eventName) { return; };\r\n    /**\r\n     * Listen to a map event only once.\r\n     *\r\n     * @return {Promise<any>}\r\n     */\r\n    BaseClass.prototype.one = function (eventName) { return; };\r\n    ;\r\n    /**\r\n     * Clears all stored values\r\n     */\r\n    BaseClass.prototype.empty = function () { };\r\n    /**\r\n     * Dispatch event.\r\n     */\r\n    BaseClass.prototype.trigger = function (eventName) {\r\n        var parameters = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            parameters[_i - 1] = arguments[_i];\r\n        }\r\n    };\r\n    return BaseClass;\r\n}());\r\n__decorate([\r\n    CordovaInstance({\r\n        destruct: true,\r\n        observable: true,\r\n        clearFunction: 'removeEventListener',\r\n        clearWithArgs: true\r\n    }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Observable)\r\n], BaseClass.prototype, \"addEventListener\", null);\r\n__decorate([\r\n    CordovaInstance({ destruct: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], BaseClass.prototype, \"addListenerOnce\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Object)\r\n], BaseClass.prototype, \"get\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, Object, Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseClass.prototype, \"set\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, Object, String, Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseClass.prototype, \"bindTo\", null);\r\n__decorate([\r\n    CordovaInstance({\r\n        observable: true,\r\n        destruct: true,\r\n        clearFunction: 'off',\r\n        clearWithArgs: true\r\n    }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Observable)\r\n], BaseClass.prototype, \"on\", null);\r\n__decorate([\r\n    CordovaInstance({ destruct: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], BaseClass.prototype, \"one\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseClass.prototype, \"empty\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseClass.prototype, \"trigger\", null);\r\nBaseClass = __decorate([\r\n    Plugin({\r\n        plugin: 'cordova-plugin-googlemaps',\r\n        pluginName: 'GoogleMaps',\r\n        pluginRef: 'plugin.google.maps.BaseClass',\r\n        repo: ''\r\n    })\r\n], BaseClass);\r\nexport { BaseClass };\r\n/**\r\n * @hidden\r\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseArrayClass/README.md\r\n */\r\nvar BaseArrayClass = (function (_super) {\r\n    __extends(BaseArrayClass, _super);\r\n    function BaseArrayClass(initialData) {\r\n        var _this = _super.call(this) || this;\r\n        if (initialData instanceof GoogleMaps.getPlugin().BaseArrayClass) {\r\n            _this._objectInstance = initialData;\r\n        }\r\n        else {\r\n            _this._objectInstance = new (GoogleMaps.getPlugin().BaseArrayClass)(initialData);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Removes all elements from the array.\r\n     * @param noNotify? {boolean} Set true to prevent remove_at events.\r\n     */\r\n    BaseArrayClass.prototype.empty = function (noNotify) { };\r\n    /**\r\n     * Iterate over each element, calling the provided callback.\r\n     * @param fn {Function}\r\n     * @param callback? {Function}\r\n     */\r\n    BaseArrayClass.prototype.forEach = function (fn, callback) { };\r\n    /**\r\n     * Iterate over each element, calling the provided callback.\r\n     * Then you can get the results of each callback.\r\n     * @param fn {Function}\r\n     * @param callback? {Function}\r\n     * @return {Array<Object>} returns a new array with the results\r\n     */\r\n    BaseArrayClass.prototype.map = function (fn, callback) { return; };\r\n    /**\r\n     * The filter() method creates a new array with all elements that pass the test implemented by the provided function.\r\n     * @param fn {Function}\r\n     * @param callback? {Function}\r\n     * @return {Array<Object>} returns a new array with the results\r\n     */\r\n    BaseArrayClass.prototype.filter = function (fn, callback) { return; };\r\n    /**\r\n     * Returns a reference to the underlying Array.\r\n     * @return {Array<Object>}\r\n     */\r\n    BaseArrayClass.prototype.getArray = function () { return; };\r\n    /**\r\n     * Returns the element at the specified index.\r\n     * @param index {number}\r\n     * @return {Object}\r\n     */\r\n    BaseArrayClass.prototype.getAt = function (index) { };\r\n    /**\r\n     * Returns the number of the elements.\r\n     * @return {number}\r\n     */\r\n    BaseArrayClass.prototype.getLength = function () { return; };\r\n    /**\r\n     * The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.\r\n     * @param element {Object}\r\n     * @return {number}\r\n     */\r\n    BaseArrayClass.prototype.indexOf = function (element) { return; };\r\n    /**\r\n     * The reverse() method reverses an array in place.\r\n     */\r\n    BaseArrayClass.prototype.reverse = function () { };\r\n    /**\r\n     * The sort() method sorts the elements of an array in place and returns the array.\r\n     */\r\n    BaseArrayClass.prototype.sort = function () { };\r\n    /**\r\n     * Inserts an element at the specified index.\r\n     * @param index {number}\r\n     * @param element {Object}\r\n     * @param noNotify? {boolean} Set true to prevent insert_at events.\r\n     * @return {Object}\r\n     */\r\n    BaseArrayClass.prototype.insertAt = function (index, element, noNotify) { };\r\n    /**\r\n     * Removes the last element of the array and returns that element.\r\n     * @param noNotify? {boolean} Set true to prevent remove_at events.\r\n     * @return {Object}\r\n     */\r\n    BaseArrayClass.prototype.pop = function (noNotify) { return; };\r\n    /**\r\n     * Adds one element to the end of the array and returns the new length of the array.\r\n     * @param element {object}\r\n     * @param noNotify? {boolean} Set true to prevent insert_at events.\r\n     */\r\n    BaseArrayClass.prototype.push = function (element, noNotify) { };\r\n    /**\r\n     * Removes an element from the specified index.\r\n     * @param index {number}\r\n     * @param noNotify? {boolean} Set true to prevent insert_at events.\r\n     */\r\n    BaseArrayClass.prototype.removeAt = function (index, noNotify) { };\r\n    /**\r\n     * Sets an element at the specified index.\r\n     * @param index {number}\r\n     * @param element {object}\r\n     * @param noNotify? {boolean} Set true to prevent set_at events.\r\n     */\r\n    BaseArrayClass.prototype.setAt = function (index, element, noNotify) { };\r\n    return BaseArrayClass;\r\n}(BaseClass));\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseArrayClass.prototype, \"empty\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Function, Function]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseArrayClass.prototype, \"forEach\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Function, Function]),\r\n    __metadata(\"design:returntype\", Array)\r\n], BaseArrayClass.prototype, \"map\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Function, Function]),\r\n    __metadata(\"design:returntype\", Array)\r\n], BaseArrayClass.prototype, \"filter\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Array)\r\n], BaseArrayClass.prototype, \"getArray\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", Object)\r\n], BaseArrayClass.prototype, \"getAt\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], BaseArrayClass.prototype, \"getLength\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Number)\r\n], BaseArrayClass.prototype, \"indexOf\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseArrayClass.prototype, \"reverse\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseArrayClass.prototype, \"sort\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number, Object, Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseArrayClass.prototype, \"insertAt\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", Object)\r\n], BaseArrayClass.prototype, \"pop\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object, Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseArrayClass.prototype, \"push\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number, Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseArrayClass.prototype, \"removeAt\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number, Object, Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], BaseArrayClass.prototype, \"setAt\", null);\r\nBaseArrayClass = __decorate([\r\n    Plugin({\r\n        plugin: 'cordova-plugin-googlemaps',\r\n        pluginName: 'GoogleMaps',\r\n        pluginRef: 'plugin.google.maps.BaseArrayClass',\r\n        repo: ''\r\n    }),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], BaseArrayClass);\r\nexport { BaseArrayClass };\r\n/**\r\n * @hidden\r\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/Circle/README.md\r\n */\r\nvar Circle = (function (_super) {\r\n    __extends(Circle, _super);\r\n    function Circle(_map, _objectInstance) {\r\n        var _this = _super.call(this) || this;\r\n        _this._map = _map;\r\n        _this._objectInstance = _objectInstance;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the map instance.\r\n     * @return {GoogleMap}\r\n     */\r\n    Circle.prototype.getMap = function () { return this._map; };\r\n    /**\r\n     * Change the center position.\r\n     * @param latLng {ILatLng}\r\n     */\r\n    Circle.prototype.setCenter = function (latLng) { };\r\n    /**\r\n     * Return the current center position\r\n     * @return {ILatLng}\r\n     */\r\n    Circle.prototype.getCenter = function () { return; };\r\n    /**\r\n     * Return the current circle radius.\r\n     * @return {number}\r\n     */\r\n    Circle.prototype.getRadius = function () { return; };\r\n    /**\r\n     * Change the circle radius.\r\n     * @param radius {number}\r\n     */\r\n    Circle.prototype.setRadius = function (radius) { };\r\n    /**\r\n     * Change the filling color (inner color).\r\n     * @param color {string}\r\n     */\r\n    Circle.prototype.setFillColor = function (color) { };\r\n    /**\r\n     * Return the current circle filling color (inner color).\r\n     * @return {string}\r\n     */\r\n    Circle.prototype.getFillColor = function () { return; };\r\n    /**\r\n     * Change the stroke width.\r\n     * @param strokeWidth {number}\r\n     */\r\n    Circle.prototype.setStrokeWidth = function (strokeWidth) { };\r\n    /**\r\n     * Return the current circle stroke width (unit: pixel).\r\n     * @return {number}\r\n     */\r\n    Circle.prototype.getStrokeWidth = function () { return; };\r\n    /**\r\n     * Change the stroke color (outter color).\r\n     * @param strokeColor {string}\r\n     */\r\n    Circle.prototype.setStrokeColor = function (strokeColor) { };\r\n    /**\r\n     * Return the current circle stroke color (outer color).\r\n     * @return {string}\r\n     */\r\n    Circle.prototype.getStrokeColor = function () { return; };\r\n    /**\r\n     * Change clickablity of the circle.\r\n     * @param clickable {boolean}\r\n     */\r\n    Circle.prototype.setClickable = function (clickable) { };\r\n    /**\r\n     * Return true if the circle is clickable.\r\n     * @return {boolean}\r\n     */\r\n    Circle.prototype.getClickable = function () { return; };\r\n    /**\r\n     * Change the circle zIndex order.\r\n     * @param zIndex {number}\r\n     */\r\n    Circle.prototype.setZIndex = function (zIndex) { };\r\n    /**\r\n     * Return the current circle zIndex.\r\n     * @return {number}\r\n     */\r\n    Circle.prototype.getZIndex = function () { return; };\r\n    /**\r\n     * Remove the circle.\r\n     */\r\n    Circle.prototype.remove = function () { };\r\n    /**\r\n     * Return the latLngBounds (rectangle) that contains the circle.\r\n     * @return {LatLngBounds}\r\n     */\r\n    Circle.prototype.getBounds = function () { return; };\r\n    /**\r\n     * Set circle visibility\r\n     * @param visible {boolean}\r\n     */\r\n    Circle.prototype.setVisible = function (visible) { };\r\n    /**\r\n     * Returns a boolean that indicates whether the circle is visible\r\n     * @return {boolean}\r\n     */\r\n    Circle.prototype.getVisible = function () { return; };\r\n    return Circle;\r\n}(BaseClass));\r\nexport { Circle };\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Circle.prototype, \"setCenter\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Object)\r\n], Circle.prototype, \"getCenter\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Circle.prototype, \"getRadius\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Circle.prototype, \"setRadius\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Circle.prototype, \"setFillColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], Circle.prototype, \"getFillColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Circle.prototype, \"setStrokeWidth\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Circle.prototype, \"getStrokeWidth\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Circle.prototype, \"setStrokeColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], Circle.prototype, \"getStrokeColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Circle.prototype, \"setClickable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Circle.prototype, \"getClickable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Circle.prototype, \"setZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Circle.prototype, \"getZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Circle.prototype, \"remove\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", LatLngBounds)\r\n], Circle.prototype, \"getBounds\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Circle.prototype, \"setVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Circle.prototype, \"getVisible\", null);\r\n/**\r\n * @hidden\r\n */\r\nvar Environment = (function (_super) {\r\n    __extends(Environment, _super);\r\n    function Environment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Get the open source software license information for Google Maps Android API v2 and Google Maps SDK for iOS.\r\n     * @return {Promise<any>}\r\n     */\r\n    Environment.prototype.getLicenseInfo = function () { return; };\r\n    /**\r\n     * Specifies the background color of the app.\r\n     * @param color\r\n     */\r\n    Environment.prototype.setBackgroundColor = function (color) { };\r\n    return Environment;\r\n}(IonicNativePlugin));\r\n__decorate([\r\n    Cordova(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], Environment.prototype, \"getLicenseInfo\", null);\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Environment.prototype, \"setBackgroundColor\", null);\r\nEnvironment = __decorate([\r\n    Plugin({\r\n        plugin: 'cordova-plugin-googlemaps',\r\n        pluginName: 'GoogleMaps',\r\n        pluginRef: 'plugin.google.maps.environment',\r\n        repo: ''\r\n    })\r\n], Environment);\r\nexport { Environment };\r\n/**\r\n * @hidden\r\n */\r\nvar Geocoder = (function () {\r\n    function Geocoder() {\r\n    }\r\n    /**\r\n     * Converts position to address and vice versa\r\n     * @param {GeocoderRequest} request Request object with either an address or a position\r\n     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\r\n     */\r\n    Geocoder.prototype.geocode = function (request) {\r\n        if (request.address instanceof Array || Array.isArray(request.address) ||\r\n            request.position instanceof Array || Array.isArray(request.position)) {\r\n            // -------------------------\r\n            // Geocoder.geocode({\r\n            //   address: [\r\n            //    \"Kyoto, Japan\",\r\n            //    \"Tokyo, Japan\"\r\n            //   ]\r\n            // })\r\n            // -------------------------\r\n            return new Promise(function (resolve, reject) {\r\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (mvcArray) {\r\n                    if (mvcArray) {\r\n                        resolve(new BaseArrayClass(mvcArray));\r\n                    }\r\n                    else {\r\n                        reject();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            // -------------------------\r\n            // Geocoder.geocode({\r\n            //   address: \"Kyoto, Japan\"\r\n            // })\r\n            // -------------------------\r\n            return new Promise(function (resolve, reject) {\r\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (results) {\r\n                    if (results) {\r\n                        resolve(results);\r\n                    }\r\n                    else {\r\n                        reject();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n    return Geocoder;\r\n}());\r\nGeocoder = __decorate([\r\n    Plugin({\r\n        pluginName: 'GoogleMaps',\r\n        pluginRef: 'plugin.google.maps.Geocoder',\r\n        plugin: 'cordova-plugin-googlemaps',\r\n        repo: ''\r\n    })\r\n], Geocoder);\r\nexport { Geocoder };\r\n/**\r\n * @hidden\r\n */\r\nvar Encoding = (function () {\r\n    function Encoding() {\r\n    }\r\n    /**\r\n     * Decodes an encoded path string into a sequence of LatLngs.\r\n     * @param encoded {string} an encoded path string\r\n     * @param precision? {number} default: 5\r\n     * @return {LatLng}\r\n     */\r\n    Encoding.prototype.decodePath = function (encoded, precision) { return; };\r\n    /**\r\n     * Encodes a sequence of LatLngs into an encoded path string.\r\n     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>} a sequence of LatLngs\r\n     * @return {string}\r\n     */\r\n    Encoding.prototype.encodePath = function (path) { return; };\r\n    return Encoding;\r\n}());\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String, Number]),\r\n    __metadata(\"design:returntype\", LatLng)\r\n], Encoding.prototype, \"decodePath\", null);\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", String)\r\n], Encoding.prototype, \"encodePath\", null);\r\nEncoding = __decorate([\r\n    Plugin({\r\n        pluginName: 'GoogleMaps',\r\n        pluginRef: 'plugin.google.maps.geometry.encoding',\r\n        plugin: 'cordova-plugin-googlemaps',\r\n        repo: ''\r\n    })\r\n], Encoding);\r\nexport { Encoding };\r\n/**\r\n * @hidden\r\n */\r\nvar Spherical = (function () {\r\n    function Spherical() {\r\n    }\r\n    /**\r\n     * Returns the distance, in meters, between two LatLngs.\r\n     * @param locationA {ILatLng}\r\n     * @param locationB {ILatLng}\r\n     * @return {number}\r\n     */\r\n    Spherical.prototype.computeDistanceBetween = function (from, to) { return; };\r\n    /**\r\n     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\r\n     * @param from {ILatLng}\r\n     * @param distance {number}\r\n     * @param heading {number}\r\n     * @return {LatLng}\r\n     */\r\n    Spherical.prototype.computeOffset = function (from, distance, heading) { return; };\r\n    /**\r\n     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\r\n     * @param to {ILatLng} The destination LatLng.\r\n     * @param distance {number} The distance travelled, in meters.\r\n     * @param heading {number} The heading in degrees clockwise from north.\r\n     * @return {LatLng}\r\n     */\r\n    Spherical.prototype.computeOffsetOrigin = function (to, distance, heading) { return; };\r\n    /**\r\n     * Returns the length of the given path.\r\n     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}\r\n     * @return {number}\r\n     */\r\n    Spherical.prototype.computeLength = function (path) { return; };\r\n    /**\r\n     * Returns the area of a closed path. The computed area uses the same units as the radius.\r\n     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}.\r\n     * @return {number}\r\n     */\r\n    Spherical.prototype.computeArea = function (path) { return; };\r\n    /**\r\n     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\r\n     * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}.\r\n     * @return {number}\r\n     */\r\n    Spherical.prototype.computeSignedArea = function (path) { return; };\r\n    /**\r\n     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\r\n     * @param from {ILatLng}\r\n     * @param to {ILatLng}\r\n     * @return {number}\r\n     */\r\n    Spherical.prototype.computeHeading = function (from, to) { return; };\r\n    /**\r\n     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\r\n     * @param from {ILatLng}     The LatLng from which to start.\r\n     * @param to {ILatLng}       The LatLng toward which to travel.\r\n     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\r\n     * @return {LatLng}\r\n     */\r\n    Spherical.prototype.interpolate = function (from, to, fraction) { return; };\r\n    return Spherical;\r\n}());\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object, Object]),\r\n    __metadata(\"design:returntype\", Number)\r\n], Spherical.prototype, \"computeDistanceBetween\", null);\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object, Number, Number]),\r\n    __metadata(\"design:returntype\", LatLng)\r\n], Spherical.prototype, \"computeOffset\", null);\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object, Number, Number]),\r\n    __metadata(\"design:returntype\", LatLng)\r\n], Spherical.prototype, \"computeOffsetOrigin\", null);\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Number)\r\n], Spherical.prototype, \"computeLength\", null);\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Number)\r\n], Spherical.prototype, \"computeArea\", null);\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Number)\r\n], Spherical.prototype, \"computeSignedArea\", null);\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object, Object]),\r\n    __metadata(\"design:returntype\", Number)\r\n], Spherical.prototype, \"computeHeading\", null);\r\n__decorate([\r\n    Cordova({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object, Object, Number]),\r\n    __metadata(\"design:returntype\", LatLng)\r\n], Spherical.prototype, \"interpolate\", null);\r\nSpherical = __decorate([\r\n    Plugin({\r\n        pluginName: 'GoogleMaps',\r\n        pluginRef: 'plugin.google.maps.geometry.spherical',\r\n        plugin: 'cordova-plugin-googlemaps',\r\n        repo: ''\r\n    })\r\n], Spherical);\r\nexport { Spherical };\r\n/**\r\n * @hidden\r\n */\r\nvar GoogleMap = (function (_super) {\r\n    __extends(GoogleMap, _super);\r\n    function GoogleMap(element, options) {\r\n        var _this = _super.call(this) || this;\r\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\r\n            if (typeof element === 'string') {\r\n                element = document.getElementById(element);\r\n            }\r\n            _this._objectInstance = GoogleMaps.getPlugin().Map.getMap(element, options);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Changes the map div\r\n     * @param domNode\r\n     */\r\n    GoogleMap.prototype.setDiv = function (domNode) { };\r\n    /**\r\n     * Returns the map HTML element\r\n     * @return {HTMLElement}\r\n     */\r\n    GoogleMap.prototype.getDiv = function () { return; };\r\n    /**\r\n     * Changes the map type id\r\n     * @param mapTypeId {string}\r\n     */\r\n    GoogleMap.prototype.setMapTypeId = function (mapTypeId) { };\r\n    /**\r\n     * Moves the camera with animation\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.animateCamera = function (cameraPosition) { return; };\r\n    /**\r\n     * Zooming in the camera with animation\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.animateCameraZoomIn = function () { return; };\r\n    /**\r\n     * Zooming out the camera with animation\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.animateCameraZoomOut = function () { return; };\r\n    /**\r\n     * Moves the camera without animation\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.moveCamera = function (cameraPosition) { return; };\r\n    /**\r\n     * Zooming in the camera without animation\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.moveCameraZoomIn = function () { return; };\r\n    /**\r\n     * Zooming out the camera without animation\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.moveCameraZoomOut = function () { return; };\r\n    /**\r\n     * Get the position of the camera.\r\n     * @return {CameraPosition}\r\n     */\r\n    GoogleMap.prototype.getCameraPosition = function () { return; };\r\n    /**\r\n     * Get the current camera target position\r\n     * @return {Promise<CameraPosition>}\r\n     */\r\n    GoogleMap.prototype.getCameraTarget = function () { return; };\r\n    /**\r\n     * Get the current camera zoom level\r\n     * @return {number}\r\n     */\r\n    GoogleMap.prototype.getCameraZoom = function () { return; };\r\n    /**\r\n     * Get the current camera bearing\r\n     * @return {number}\r\n     */\r\n    GoogleMap.prototype.getCameraBearing = function () { return; };\r\n    /**\r\n     * Get the current camera tilt (view angle)\r\n     * @return {number}\r\n     */\r\n    GoogleMap.prototype.getCameraTilt = function () { return; };\r\n    /**\r\n     * Set the center position of the camera view\r\n     * @param latLng {ILatLng | Array<ILatLng>}\r\n     */\r\n    GoogleMap.prototype.setCameraTarget = function (latLng) { };\r\n    /**\r\n     * Set zoom level of the camera\r\n     * @param zoomLevel {number} Zoom level\r\n     */\r\n    GoogleMap.prototype.setCameraZoom = function (zoomLevel) { };\r\n    /**\r\n     * Set the camera view angle\r\n     * @param tiltLevel {number} Tilt level\r\n     */\r\n    GoogleMap.prototype.setCameraTilt = function (tiltLevel) { };\r\n    /**\r\n     * Set camera bearing\r\n     * @param bearing {any}\r\n     */\r\n    GoogleMap.prototype.setCameraBearing = function (bearing) { };\r\n    /**\r\n     * Change the center of the map by the given distance in pixels\r\n     * @param x {any}\r\n     * @param y {any}\r\n     */\r\n    GoogleMap.prototype.panBy = function (x, y) { };\r\n    /**\r\n     * Get the current visible region (southWest and northEast)\r\n     * @return {VisibleRegion}\r\n     */\r\n    GoogleMap.prototype.getVisibleRegion = function () { return; };\r\n    /**\r\n     * Get the current device location\r\n     * @return {Promise<MyLocation>}\r\n     */\r\n    GoogleMap.prototype.getMyLocation = function (options) { return; };\r\n    /**\r\n     * Set false to ignore all clicks on the map\r\n     * @param isClickable {boolean}\r\n     */\r\n    GoogleMap.prototype.setClickable = function (isClickable) { };\r\n    /**\r\n     * Destroy a map completely\r\n     */\r\n    GoogleMap.prototype.remove = function () { };\r\n    /**\r\n     * Remove all overlays, such as marker\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.clear = function () { return; };\r\n    /**\r\n     * Convert the unit from LatLng to the pixels from the left/top of the map div\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.fromLatLngToPoint = function (latLng) { return; };\r\n    /**\r\n     * Convert the unit from the pixels from the left/top to the LatLng\r\n     * @return {Promise<LatLng>}\r\n     */\r\n    GoogleMap.prototype.fromPointToLatLng = function (point) { return; };\r\n    /**\r\n     * Set true if you want to show the MyLocation button\r\n     * @param enabled {boolean}\r\n     */\r\n    GoogleMap.prototype.setMyLocationEnabled = function (enabled) { };\r\n    /**\r\n     * Get the currently focused building\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.getFocusedBuilding = function () { return; };\r\n    /**\r\n     * Set true if you want to show the indoor map\r\n     * @param enabled {boolean}\r\n     */\r\n    GoogleMap.prototype.setIndoorEnabled = function (enabled) { };\r\n    /**\r\n     * Set true if you want to show the traffic layer\r\n     * @param enabled {boolean}\r\n     */\r\n    GoogleMap.prototype.setTrafficEnabled = function (enabled) { };\r\n    /**\r\n     * Set true if you want to show the compass button\r\n     * @param enabled {boolean}\r\n     */\r\n    GoogleMap.prototype.setCompassEnabled = function (enabled) { };\r\n    /**\r\n     * Sets the preference for whether all gestures should be enabled or disabled\r\n     * @param enabled {boolean}\r\n     */\r\n    GoogleMap.prototype.setAllGesturesEnabled = function (enabled) { };\r\n    /**\r\n     * Set visibility of the map\r\n     * @param visible {boolean}\r\n     */\r\n    GoogleMap.prototype.setVisible = function (visible) { };\r\n    /**\r\n     * Adjust the map padding (same as CSS padding rule)\r\n     * @param top {number}\r\n     * @param right {number}\r\n     * @param left {number}\r\n     * @param bottom {number}\r\n     */\r\n    GoogleMap.prototype.setPadding = function (top, right, bottom, left) { };\r\n    /**\r\n     * Set options\r\n     * @param options\r\n     */\r\n    GoogleMap.prototype.setOptions = function (options) { };\r\n    /**\r\n     * Adds a marker\r\n     * @return {Promise<Marker | any>}\r\n     */\r\n    GoogleMap.prototype.addMarker = function (options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._objectInstance.addMarker(options, function (marker) {\r\n                if (marker) {\r\n                    resolve(new Marker(_this, marker));\r\n                }\r\n                else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GoogleMap.prototype.addMarkerCluster = function (options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._objectInstance.addMarkerCluster(options, function (markerCluster) {\r\n                if (markerCluster) {\r\n                    resolve(new MarkerCluster(_this, markerCluster));\r\n                }\r\n                else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds a circle\r\n     * @return {Promise<Circle | any>}\r\n     */\r\n    GoogleMap.prototype.addCircle = function (options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._objectInstance.addCircle(options, function (circle) {\r\n                if (circle) {\r\n                    resolve(new Circle(_this, circle));\r\n                }\r\n                else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds a polygon\r\n     * @return {Promise<Polygon | any>}\r\n     */\r\n    GoogleMap.prototype.addPolygon = function (options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._objectInstance.addPolygon(options, function (polygon) {\r\n                if (polygon) {\r\n                    resolve(new Polygon(_this, polygon));\r\n                }\r\n                else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @return {Promise<Polyline | any>}\r\n     */\r\n    GoogleMap.prototype.addPolyline = function (options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._objectInstance.addPolyline(options, function (polyline) {\r\n                if (polyline) {\r\n                    resolve(new Polyline(_this, polyline));\r\n                }\r\n                else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @return {Promise<TileOverlay | any>}\r\n     */\r\n    GoogleMap.prototype.addTileOverlay = function (options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._objectInstance.addTileOverlay(options, function (tileOverlay) {\r\n                if (tileOverlay) {\r\n                    resolve(new TileOverlay(_this, tileOverlay));\r\n                }\r\n                else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @return {Promise<GroundOverlay | any>}\r\n     */\r\n    GoogleMap.prototype.addGroundOverlay = function (options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {\r\n                if (groundOverlay) {\r\n                    resolve(new GroundOverlay(_this, groundOverlay));\r\n                }\r\n                else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Refreshes layout.\r\n     * You can execute it, but you don't need to do that. The plugin does this automatically.\r\n     */\r\n    GoogleMap.prototype.refreshLayout = function () { };\r\n    /**\r\n     * @return {Promise<any>}\r\n     */\r\n    GoogleMap.prototype.toDataURL = function () { return; };\r\n    return GoogleMap;\r\n}(BaseClass));\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [HTMLElement]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setDiv\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", HTMLElement)\r\n], GoogleMap.prototype, \"getDiv\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setMapTypeId\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"animateCamera\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"animateCameraZoomIn\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"animateCameraZoomOut\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"moveCamera\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"moveCameraZoomIn\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"moveCameraZoomOut\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Object)\r\n], GoogleMap.prototype, \"getCameraPosition\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Object)\r\n], GoogleMap.prototype, \"getCameraTarget\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], GoogleMap.prototype, \"getCameraZoom\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], GoogleMap.prototype, \"getCameraBearing\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], GoogleMap.prototype, \"getCameraTilt\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setCameraTarget\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setCameraZoom\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setCameraTilt\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setCameraBearing\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object, Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"panBy\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", VisibleRegion)\r\n], GoogleMap.prototype, \"getVisibleRegion\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"getMyLocation\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setClickable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"remove\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"clear\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"fromLatLngToPoint\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"fromPointToLatLng\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setMyLocationEnabled\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"getFocusedBuilding\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setIndoorEnabled\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setTrafficEnabled\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setCompassEnabled\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setAllGesturesEnabled\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number, Number, Number, Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setPadding\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"setOptions\", null);\r\n__decorate([\r\n    InstanceCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"addMarker\", null);\r\n__decorate([\r\n    InstanceCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"addMarkerCluster\", null);\r\n__decorate([\r\n    InstanceCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"addCircle\", null);\r\n__decorate([\r\n    InstanceCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"addPolygon\", null);\r\n__decorate([\r\n    InstanceCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"addPolyline\", null);\r\n__decorate([\r\n    InstanceCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"addTileOverlay\", null);\r\n__decorate([\r\n    InstanceCheck(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"addGroundOverlay\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GoogleMap.prototype, \"refreshLayout\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Promise)\r\n], GoogleMap.prototype, \"toDataURL\", null);\r\nGoogleMap = __decorate([\r\n    Plugin({\r\n        pluginName: 'GoogleMaps',\r\n        plugin: 'cordova-plugin-googlemaps'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [Object, Object])\r\n], GoogleMap);\r\nexport { GoogleMap };\r\n/**\r\n * @hidden\r\n */\r\nvar GroundOverlay = (function (_super) {\r\n    __extends(GroundOverlay, _super);\r\n    function GroundOverlay(_map, _objectInstance) {\r\n        var _this = _super.call(this) || this;\r\n        _this._map = _map;\r\n        _this._objectInstance = _objectInstance;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the map instance.\r\n     * @return {GoogleMap}\r\n     */\r\n    GroundOverlay.prototype.getMap = function () { return this._map; };\r\n    /**\r\n     * Change the bounds of the GroundOverlay\r\n     * @param bounds { ILatLng[]}\r\n     */\r\n    GroundOverlay.prototype.setBounds = function (bounds) { };\r\n    /**\r\n     * Change the bearing of the ground overlay\r\n     * @param bearing {number}\r\n     */\r\n    GroundOverlay.prototype.setBearing = function (bearing) { };\r\n    /**\r\n     * Return the current bearing value\r\n     */\r\n    GroundOverlay.prototype.getBearing = function () { return; };\r\n    /**\r\n     * Change the image of the ground overlay\r\n     * @param image {string} URL of image\r\n     */\r\n    GroundOverlay.prototype.setImage = function (image) { };\r\n    ;\r\n    /**\r\n     * Change the opacity of the ground overlay from 0.0 to 1.0\r\n     * @param opacity {number}\r\n     */\r\n    GroundOverlay.prototype.setOpacity = function (opacity) { };\r\n    /**\r\n     * Return the current opacity\r\n     * @return {number}\r\n     */\r\n    GroundOverlay.prototype.getOpacity = function () { return; };\r\n    /**\r\n     * Change clickablity of the ground overlay\r\n     * @param clickable {boolean}\r\n     */\r\n    GroundOverlay.prototype.setClickable = function (clickable) { };\r\n    /**\r\n     * Return true if the ground overlay is clickable\r\n     * @return {boolean}\r\n     */\r\n    GroundOverlay.prototype.getClickable = function () { return; };\r\n    /**\r\n     * Change visibility of the ground overlay\r\n     * @param visible {boolean}\r\n     */\r\n    GroundOverlay.prototype.setVisible = function (visible) { };\r\n    /**\r\n     * Return true if the ground overlay is visible\r\n     * @return {boolean}\r\n     */\r\n    GroundOverlay.prototype.getVisible = function () { return; };\r\n    /**\r\n     * Change the ground overlay zIndex order\r\n     * @param index {number}\r\n     */\r\n    GroundOverlay.prototype.setZIndex = function (index) { };\r\n    /**\r\n     * Return the current ground overlay zIndex\r\n     * @return {number}\r\n     */\r\n    GroundOverlay.prototype.getZIndex = function () { return; };\r\n    /**\r\n     * Remove the ground overlay\r\n     */\r\n    GroundOverlay.prototype.remove = function () { };\r\n    return GroundOverlay;\r\n}(BaseClass));\r\nexport { GroundOverlay };\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Array]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GroundOverlay.prototype, \"setBounds\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GroundOverlay.prototype, \"setBearing\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], GroundOverlay.prototype, \"getBearing\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GroundOverlay.prototype, \"setImage\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GroundOverlay.prototype, \"setOpacity\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], GroundOverlay.prototype, \"getOpacity\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GroundOverlay.prototype, \"setClickable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], GroundOverlay.prototype, \"getClickable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GroundOverlay.prototype, \"setVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], GroundOverlay.prototype, \"getVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GroundOverlay.prototype, \"setZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], GroundOverlay.prototype, \"getZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], GroundOverlay.prototype, \"remove\", null);\r\n/**\r\n * @hidden\r\n */\r\nvar HtmlInfoWindow = HtmlInfoWindow_1 = (function (_super) {\r\n    __extends(HtmlInfoWindow, _super);\r\n    function HtmlInfoWindow() {\r\n        var _this = _super.call(this) || this;\r\n        if (checkAvailability(HtmlInfoWindow_1.getPluginRef(), null, HtmlInfoWindow_1.getPluginName()) === true) {\r\n            _this._objectInstance = new (HtmlInfoWindow_1.getPlugin())();\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Change the backgroundColor\r\n     * @param color {string}\r\n     */\r\n    HtmlInfoWindow.prototype.setBackgroundColor = function (color) { };\r\n    /**\r\n     * Set your HTML contents.\r\n     * @param content {any} String containing text or HTML element\r\n     */\r\n    HtmlInfoWindow.prototype.setContent = function (content) { };\r\n    /**\r\n     * Open the htmlInfoWindow\r\n     * @param marker {Marker}\r\n     */\r\n    HtmlInfoWindow.prototype.open = function (marker) { };\r\n    /**\r\n     * Close the htmlInfoWindow\r\n     */\r\n    HtmlInfoWindow.prototype.close = function () { };\r\n    return HtmlInfoWindow;\r\n}(IonicNativePlugin));\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], HtmlInfoWindow.prototype, \"setBackgroundColor\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], HtmlInfoWindow.prototype, \"setContent\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", Object)\r\n], HtmlInfoWindow.prototype, \"open\", null);\r\n__decorate([\r\n    CordovaInstance(),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], HtmlInfoWindow.prototype, \"close\", null);\r\nHtmlInfoWindow = HtmlInfoWindow_1 = __decorate([\r\n    Plugin({\r\n        plugin: 'cordova-plugin-googlemaps',\r\n        pluginName: 'GoogleMaps',\r\n        pluginRef: 'plugin.google.maps.HtmlInfoWindow',\r\n        repo: ''\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], HtmlInfoWindow);\r\nexport { HtmlInfoWindow };\r\n/**\r\n * @hidden\r\n */\r\nvar Marker = (function (_super) {\r\n    __extends(Marker, _super);\r\n    function Marker(_map, _objectInstance) {\r\n        var _this = _super.call(this) || this;\r\n        _this._map = _map;\r\n        _this._objectInstance = _objectInstance;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the ID of instance.\r\n     * @return {string}\r\n     */\r\n    Marker.prototype.getId = function () { return; };\r\n    /**\r\n     * Return the map instance.\r\n     * @return {GoogleMap}\r\n     */\r\n    Marker.prototype.getMap = function () { return this._map; };\r\n    /**\r\n     * Set the marker position.\r\n     * @param latLng {ILatLng}\r\n     */\r\n    Marker.prototype.setPosition = function (latLng) { return; };\r\n    /**\r\n     * Return the marker position.\r\n     * @return {ILatLng}\r\n     */\r\n    Marker.prototype.getPosition = function () { return; };\r\n    /**\r\n     * Show the normal infoWindow of the marker.\r\n     */\r\n    Marker.prototype.showInfoWindow = function () { };\r\n    /**\r\n     * Hide the normal infoWindow of the marker.\r\n     */\r\n    Marker.prototype.hideInfoWindow = function () { };\r\n    /**\r\n     * Specify the animation either `DROP` or `BOUNCE`\r\n     * @param animation {string}\r\n     */\r\n    Marker.prototype.setAnimation = function (animation) { };\r\n    /**\r\n     * Set true if you **do not want** to move the map when you click on the marker.\r\n     * @param disableAutoPan {boolean}\r\n     */\r\n    Marker.prototype.setDisableAutoPan = function (disableAutoPan) { };\r\n    /**\r\n     * Set false if you want to hide the marker.\r\n     * @param visible\r\n     */\r\n    Marker.prototype.setVisible = function (visible) { };\r\n    /**\r\n     * Return true if the marker is visible\r\n     */\r\n    Marker.prototype.isVisible = function () { return; };\r\n    /**\r\n     * Change title of the normal infoWindow.\r\n     * @param title {string}\r\n     */\r\n    Marker.prototype.setTitle = function (title) { };\r\n    /**\r\n     * Return the title strings.\r\n     * @return {string}\r\n     */\r\n    Marker.prototype.getTitle = function () { return; };\r\n    /**\r\n     * Change snippet of the normal infoWindow.\r\n     * @param snippet {string}\r\n     */\r\n    Marker.prototype.setSnippet = function (snippet) { };\r\n    /**\r\n     * Return the snippet strings.\r\n     * @return {string}\r\n     */\r\n    Marker.prototype.getSnippet = function () { return; };\r\n    /**\r\n     * Change the marker opacity from 0.0 to 1.0.\r\n     * @param alpha {number} Opacity\r\n     */\r\n    Marker.prototype.setOpacity = function (alpha) { };\r\n    /**\r\n     * Return the marker opacity.\r\n     * @return {number} Opacity\r\n     */\r\n    Marker.prototype.getOpacity = function () { return; };\r\n    /**\r\n     * Remove the marker.\r\n     */\r\n    Marker.prototype.remove = function () { };\r\n    /**\r\n     * Change the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\r\n     * @param x {number} Distance from left of the icon image in pixels.\r\n     * @param y {number} Distance from top of the icon image in pixels.\r\n     */\r\n    Marker.prototype.setIconAnchor = function (x, y) { };\r\n    /**\r\n     * Change the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\r\n     * @param x {number} Distance from left of the icon image in pixels.\r\n     * @param y {number} Distance from top of the icon image in pixels.\r\n     */\r\n    Marker.prototype.setInfoWindowAnchor = function (x, y) { };\r\n    /**\r\n     * Return true if the infoWindow is shown on the marker\r\n     * @return {boolean}\r\n     */\r\n    Marker.prototype.isInfoWindowShown = function () { return; };\r\n    /**\r\n     * Return the marker hash code.\r\n     * @return {string} Marker hash code\r\n     */\r\n    Marker.prototype.getHashCode = function () { return; };\r\n    /**\r\n     * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\r\n     * @param y {number} z-index\r\n     */\r\n    Marker.prototype.setZIndex = function (zIndex) { };\r\n    /**\r\n     * Get z-index\r\n     * @return {number}\r\n     */\r\n    Marker.prototype.getZIndex = function () { return; };\r\n    /**\r\n     * Set true if you allow all users to drag the marker.\r\n     * @param draggable {boolean}\r\n     */\r\n    Marker.prototype.setDraggable = function (draggable) { };\r\n    /**\r\n     * Return true if the marker drag is enabled.\r\n     * @return {boolean}\r\n     */\r\n    Marker.prototype.isDraggable = function () { return; };\r\n    /**\r\n     * Set true if you want to be flat marker.\r\n     * @param flat {boolean}\r\n     */\r\n    Marker.prototype.setFlat = function (flat) { return; };\r\n    /**\r\n     * Change icon url and/or size\r\n     * @param icon\r\n     */\r\n    Marker.prototype.setIcon = function (icon) { return; };\r\n    /**\r\n     * Set the marker rotation angle.\r\n     * @param rotation {number}\r\n     */\r\n    Marker.prototype.setRotation = function (rotation) { };\r\n    /**\r\n     * Return the marker rotation angle.\r\n     * @return {number}\r\n     */\r\n    Marker.prototype.getRotation = function () { return; };\r\n    return Marker;\r\n}(BaseClass));\r\nexport { Marker };\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Marker.prototype, \"getId\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setPosition\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Object)\r\n], Marker.prototype, \"getPosition\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"showInfoWindow\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"hideInfoWindow\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setAnimation\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setDisableAutoPan\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Marker.prototype, \"isVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setTitle\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], Marker.prototype, \"getTitle\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setSnippet\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], Marker.prototype, \"getSnippet\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setOpacity\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Marker.prototype, \"getOpacity\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"remove\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number, Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setIconAnchor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number, Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setInfoWindowAnchor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Marker.prototype, \"isInfoWindowShown\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], Marker.prototype, \"getHashCode\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Marker.prototype, \"getZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setDraggable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Marker.prototype, \"isDraggable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setFlat\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setIcon\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Marker.prototype, \"setRotation\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Marker.prototype, \"getRotation\", null);\r\n/**\r\n * @hidden\r\n */\r\nvar MarkerCluster = (function (_super) {\r\n    __extends(MarkerCluster, _super);\r\n    function MarkerCluster(_map, _objectInstance) {\r\n        var _this = _super.call(this) || this;\r\n        _this._map = _map;\r\n        _this._objectInstance = _objectInstance;\r\n        return _this;\r\n    }\r\n    MarkerCluster.prototype.addMarker = function (marker) { };\r\n    MarkerCluster.prototype.addMarkers = function (markers) { };\r\n    MarkerCluster.prototype.remove = function () { };\r\n    return MarkerCluster;\r\n}(BaseClass));\r\nexport { MarkerCluster };\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Object]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], MarkerCluster.prototype, \"addMarker\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Array]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], MarkerCluster.prototype, \"addMarkers\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], MarkerCluster.prototype, \"remove\", null);\r\n/**\r\n * @hidden\r\n */\r\nvar Polygon = (function (_super) {\r\n    __extends(Polygon, _super);\r\n    function Polygon(_map, _objectInstance) {\r\n        var _this = _super.call(this) || this;\r\n        _this._map = _map;\r\n        _this._objectInstance = _objectInstance;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the map instance.\r\n     * @return {GoogleMap}\r\n     */\r\n    Polygon.prototype.getMap = function () { return this._map; };\r\n    /**\r\n     * Change the polygon points.\r\n     * @param points {ILatLng[]}\r\n     */\r\n    Polygon.prototype.setPoints = function (points) { };\r\n    /**\r\n     * Return an instance of the BaseArrayClass.\r\n     * You can modify the points.\r\n     * @return {BaseArrayClass<ILatLng>}\r\n     */\r\n    Polygon.prototype.getPoints = function () { return; };\r\n    /**\r\n     * Change the polygon holes.\r\n     * @param holes {ILatLng[][]}\r\n     */\r\n    Polygon.prototype.setHoles = function (holes) { };\r\n    /**\r\n     * Return an instance of the BaseArrayClass.\r\n     * You can modify the holes.\r\n     * @return {BaseArrayClass<ILatLng[]>}\r\n     */\r\n    Polygon.prototype.getHoles = function () { return; };\r\n    /**\r\n     * Change the filling color (inner color)\r\n     * @param fillColor {string}\r\n     */\r\n    Polygon.prototype.setFillColor = function (fillColor) { };\r\n    /**\r\n     * Return the current polygon filling color (inner color).\r\n     * @return {string}\r\n     */\r\n    Polygon.prototype.getFillColor = function () { return; };\r\n    /**\r\n     * Change the stroke color (outer color)\r\n     * @param strokeColor {string}\r\n     */\r\n    Polygon.prototype.setStrokeColor = function (strokeColor) { };\r\n    /**\r\n     * Return the current polygon stroke color (outer color)\r\n     * @return {string}\r\n     */\r\n    Polygon.prototype.getStrokeColor = function () { return; };\r\n    /**\r\n     * Change clickablity of the polygon\r\n     * @param clickable {boolean}\r\n     */\r\n    Polygon.prototype.setClickable = function (clickable) { };\r\n    /**\r\n     * Return true if the polygon is clickable\r\n     */\r\n    Polygon.prototype.getClickable = function () { return; };\r\n    /**\r\n     * Change visibility of the polygon\r\n     * @param visible {boolean}\r\n     */\r\n    Polygon.prototype.setVisible = function (visible) { };\r\n    /**\r\n     * Return true if the polygon is visible\r\n     * @return {boolean}\r\n     */\r\n    Polygon.prototype.getVisible = function () { return; };\r\n    /**\r\n     * Change the polygon zIndex order.\r\n     * @param zIndex {number}\r\n     */\r\n    Polygon.prototype.setZIndex = function (zIndex) { };\r\n    /**\r\n     * Return the current polygon zIndex\r\n     * @return {number}\r\n     */\r\n    Polygon.prototype.getZIndex = function () { return; };\r\n    /**\r\n     * Remove the polygon.\r\n     */\r\n    Polygon.prototype.remove = function () { };\r\n    /**\r\n     * Change the polygon stroke width\r\n     */\r\n    Polygon.prototype.setStrokeWidth = function (strokeWidth) { };\r\n    /**\r\n     * Return the polygon stroke width\r\n     */\r\n    Polygon.prototype.getStrokeWidth = function () { return; };\r\n    /**\r\n     * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\r\n     * @param geodesic {boolean}\r\n     */\r\n    Polygon.prototype.setGeodesic = function (geodesic) { };\r\n    /**\r\n     * Return true if the polylgon is geodesic.\r\n     * @return {boolean}\r\n     */\r\n    Polygon.prototype.getGeodesic = function () { return; };\r\n    return Polygon;\r\n}(BaseClass));\r\nexport { Polygon };\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Array]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"setPoints\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", BaseArrayClass)\r\n], Polygon.prototype, \"getPoints\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Array]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"setHoles\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", BaseArrayClass)\r\n], Polygon.prototype, \"getHoles\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"setFillColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], Polygon.prototype, \"getFillColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"setStrokeColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], Polygon.prototype, \"getStrokeColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"setClickable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Polygon.prototype, \"getClickable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"setVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Polygon.prototype, \"getVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"setZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Polygon.prototype, \"getZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"remove\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"setStrokeWidth\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Polygon.prototype, \"getStrokeWidth\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polygon.prototype, \"setGeodesic\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Polygon.prototype, \"getGeodesic\", null);\r\n/**\r\n * @hidden\r\n */\r\nvar Polyline = (function (_super) {\r\n    __extends(Polyline, _super);\r\n    function Polyline(_map, _objectInstance) {\r\n        var _this = _super.call(this) || this;\r\n        _this._map = _map;\r\n        _this._objectInstance = _objectInstance;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the map instance.\r\n     * @return {GoogleMap}\r\n     */\r\n    Polyline.prototype.getMap = function () { return this._map; };\r\n    /**\r\n     * Change the polyline points.\r\n     * @param points {ILatLng[]}\r\n     */\r\n    Polyline.prototype.setPoints = function (points) { };\r\n    /**\r\n     * Return an instance of the BaseArrayClass\r\n     * You can modify the points.\r\n     */\r\n    Polyline.prototype.getPoints = function () { return; };\r\n    /**\r\n     * When true, edges of the polyline are interpreted as geodesic and will follow the curvature of the Earth.\r\n     * @param geoDesic {boolean}\r\n     */\r\n    Polyline.prototype.setGeoDesic = function (geoDesic) { };\r\n    /**\r\n     * Return true if the polyline is geodesic\r\n     */\r\n    Polyline.prototype.getGeodesic = function () { return; };\r\n    /**\r\n     * Change visibility of the polyline\r\n     * @param visible {boolean}\r\n     */\r\n    Polyline.prototype.setVisible = function (visible) { };\r\n    /**\r\n     * Return true if the polyline is visible\r\n     * @return {boolean}\r\n     */\r\n    Polyline.prototype.getVisible = function () { return; };\r\n    /**\r\n     * Change clickablity of the polyline\r\n     * @param clickable {boolean}\r\n     */\r\n    Polyline.prototype.setClickable = function (clickable) { };\r\n    /**\r\n     * Return true if the polyline is clickable\r\n     * @return {boolean}\r\n     */\r\n    Polyline.prototype.getClickable = function () { return; };\r\n    /**\r\n     * Change the polyline color\r\n     * @param strokeColor {string}\r\n     */\r\n    Polyline.prototype.setStrokeColor = function (strokeColor) { };\r\n    /**\r\n     * Return the current polyline color\r\n     * @return {string}\r\n     */\r\n    Polyline.prototype.getStrokeColor = function () { return; };\r\n    /**\r\n     * Change the polyline stroke width\r\n     * @param strokeWidth {number}\r\n     */\r\n    Polyline.prototype.setStrokeWidth = function (strokeWidth) { };\r\n    /**\r\n     * Return the current stroke width (unit: pixel).\r\n     * @return {number}\r\n     */\r\n    Polyline.prototype.getStrokeWidth = function () { return; };\r\n    /**\r\n     * Change the polyline zIndex order.\r\n     * @param index {number}\r\n     */\r\n    Polyline.prototype.setZIndex = function (index) { };\r\n    /**\r\n     * Return the current polyline zIndex\r\n     * @return {number}\r\n     */\r\n    Polyline.prototype.getZIndex = function () { return; };\r\n    /**\r\n     * Remove the polyline\r\n     */\r\n    Polyline.prototype.remove = function () { };\r\n    return Polyline;\r\n}(BaseClass));\r\nexport { Polyline };\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Array]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polyline.prototype, \"setPoints\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", BaseArrayClass)\r\n], Polyline.prototype, \"getPoints\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polyline.prototype, \"setGeoDesic\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Polyline.prototype, \"getGeodesic\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polyline.prototype, \"setVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Polyline.prototype, \"getVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polyline.prototype, \"setClickable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], Polyline.prototype, \"getClickable\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [String]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polyline.prototype, \"setStrokeColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", String)\r\n], Polyline.prototype, \"getStrokeColor\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polyline.prototype, \"setStrokeWidth\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Polyline.prototype, \"getStrokeWidth\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polyline.prototype, \"setZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], Polyline.prototype, \"getZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], Polyline.prototype, \"remove\", null);\r\n/**\r\n * @hidden\r\n */\r\nvar TileOverlay = (function (_super) {\r\n    __extends(TileOverlay, _super);\r\n    function TileOverlay(_map, _objectInstance) {\r\n        var _this = _super.call(this) || this;\r\n        _this._map = _map;\r\n        _this._objectInstance = _objectInstance;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the map instance.\r\n     * @return {GoogleMap}\r\n     */\r\n    TileOverlay.prototype.getMap = function () { return this._map; };\r\n    /**\r\n     * Set whether the tiles should fade in.\r\n     * @param fadeIn {boolean}\r\n     */\r\n    TileOverlay.prototype.setFadeIn = function (fadeIn) { };\r\n    /**\r\n     * Get whether the tiles should fade in\r\n     * @return {boolean}\r\n     */\r\n    TileOverlay.prototype.getFadeIn = function () { return; };\r\n    /**\r\n     * Set the zIndex of the tile overlay\r\n     * @param zIndex {number}\r\n     */\r\n    TileOverlay.prototype.setZIndex = function (zIndex) { };\r\n    /**\r\n     * Return the zIndex of the tile overlay\r\n     * @return {number}\r\n     */\r\n    TileOverlay.prototype.getZIndex = function () { return; };\r\n    /**\r\n     * Set the opacity of the tile overlay\r\n     * @param opacity {number}\r\n     */\r\n    TileOverlay.prototype.setOpacity = function (opacity) { };\r\n    /**\r\n     * Return the opacity of the tile overlay\r\n     * @return {number}\r\n     */\r\n    TileOverlay.prototype.getOpacity = function () { return; };\r\n    /**\r\n     * Set false if you want to hide\r\n     * @param visible {boolean}\r\n     */\r\n    TileOverlay.prototype.setVisible = function (visible) { };\r\n    /**\r\n     * Return true if the tile overlay is visible\r\n     * @return {boolean}\r\n     */\r\n    TileOverlay.prototype.getVisible = function () { return; };\r\n    /**\r\n     * Get tile size\r\n     */\r\n    TileOverlay.prototype.getTileSize = function () { return; };\r\n    /**\r\n     * Remove the tile overlay\r\n     */\r\n    TileOverlay.prototype.remove = function () { };\r\n    return TileOverlay;\r\n}(BaseClass));\r\nexport { TileOverlay };\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], TileOverlay.prototype, \"setFadeIn\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], TileOverlay.prototype, \"getFadeIn\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], TileOverlay.prototype, \"setZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], TileOverlay.prototype, \"getZIndex\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Number]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], TileOverlay.prototype, \"setOpacity\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Number)\r\n], TileOverlay.prototype, \"getOpacity\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [Boolean]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], TileOverlay.prototype, \"setVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Boolean)\r\n], TileOverlay.prototype, \"getVisible\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", Object)\r\n], TileOverlay.prototype, \"getTileSize\", null);\r\n__decorate([\r\n    CordovaInstance({ sync: true }),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], TileOverlay.prototype, \"remove\", null);\r\nvar HtmlInfoWindow_1;\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/google-maps/index.js\n// module id = 282\n// module chunks = 0"],"sourceRoot":""}